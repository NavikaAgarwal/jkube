<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (c) 2019 Red Hat, Inc.
    This program and the accompanying materials are made
    available under the terms of the Eclipse Public License 2.0
    which is available at:

        https://www.eclipse.org/legal/epl-2.0/

    SPDX-License-Identifier: EPL-2.0

    Contributors:
      Red Hat, Inc. - initial API and implementation

-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="
           http://maven.apache.org/POM/4.0.0 
           http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.eclipse.jkube</groupId>
  <artifactId>jkube</artifactId>
  <version>1.18-SNAPSHOT</version>
  <packaging>pom</packaging>
  <description>Eclipse JKube</description>
  <name>Eclipse JKube</name>

  <url>https://projects.eclipse.org/projects/ecd.jkube</url>

  <licenses>
    <license>
      <url>https://www.eclipse.org/legal/epl-2.0/</url>
      <name>Eclipse Public License 2.0</name>
      <comments>A business-friendly OSS license</comments>
    </license>
  </licenses>

  <developers>
    <developer>
      <id>geeks</id>
      <name>Eclipse JKube Development Team</name>
      <email>jkube-dev@eclipse.org</email>
      <organization>Eclipse Foundation</organization>
      <organizationUrl>https://projects.eclipse.org/projects/ecd.jkube</organizationUrl>
    </developer>
  </developers>

  <scm>
    <connection>scm:git:git://github.com/eclipse-jkube/jkube.git</connection>
    <developerConnection>scm:git:ssh://git@github.com/eclipse-jkube/jkube.git</developerConnection>
    <tag>HEAD</tag>
    <url>https://github.com/eclipse-jkube/jkube</url> <!-- Changed to HTTPS for better accessibility -->
  </scm>

  <repositories>
    <repository>
      <id>maven-central</id>
      <url>https://repo1.maven.org/maven2/</url>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
    <repository>
      <id>repo.gradle.org</id>
      <url>https://repo.gradle.org/gradle/libs-releases-local/</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
    <repository>
      <id>ext.repo.gradle.org</id>
      <url>https://repo.gradle.org/gradle/ext-releases-local/</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
  </repositories>

  <distributionManagement>
    <snapshotRepository>
      <id>ossrh</id>
      <name>Sonatype OSS Repository (Snapshots)</name>
      <url>https://oss.sonatype.org/content/repositories/snapshots</url>
    </snapshotRepository>
    <repository>
      <id>ossrh</id>
      <name>Nexus Release Repository</name>
      <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
    </repository>
  </distributionManagement>

  <properties>
    <!-- Updated Java version to 17 -->
    <jdk.version>17</jdk.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <skipTests>false</skipTests>

    <!-- Plugin Versions -->
    <version.asciidoctor-maven-plugin>2.5.0</version.asciidoctor-maven-plugin>
    <version.asciidoctorj>2.4.3</version.asciidoctorj>
    <version.assertj-core>3.25.4</version.assertj-core>
    <version.citrus>3.5.0</version.citrus>
    <version.commons-compress>1.29</version.commons-compress> <!-- Updated to latest compatible version -->
    <version.commons-io>2.11.0</version.commons-io> <!-- Updated to latest compatible version -->
    <version.gradle>8.1.1</version.gradle> <!-- Updated Gradle version -->
    <version.gradle-api-maven-plugin>0.0.6</version.gradle-api-maven-plugin> <!-- Updated plugin version -->
    <version.groovy>3.0.27</version.groovy> <!-- Updated Groovy version -->
    <version.guava>31.1-jre</version.guava> <!-- Updated Guava version -->
    <version.helm-java>0.0.12</version.helm-java> <!-- Updated Helm Java version -->
    <version.jackson>2.14.2</version.jackson> <!-- Updated Jackson version -->
    <version.jacoco>0.8.8</version.jacoco> <!-- Updated JaCoCo version -->
    <version.json-smart>2.5.3</version.json-smart> <!-- Updated JSON Smart version -->
    <version.junit5>5.10.0</version.junit5> <!-- Updated JUnit 5 version -->
    <version.kubernetes-client>6.13.3</version.kubernetes-client> <!-- Updated Kubernetes Client version -->
    <version.license-maven-plugin>4.5.0</version.license-maven-plugin> <!-- Ensured latest version -->
    <version.lombok>1.18.26</version.lombok> <!-- Updated Lombok version -->
    <version.lombok-maven-plugin>1.18.24.0</version.lombok-maven-plugin> <!-- Updated Lombok Maven Plugin version -->
    <version.maven-compiler-plugin>3.10.1</version.maven-compiler-plugin> <!-- Updated Maven Compiler Plugin -->
    <version.maven-enforcer-plugin>3.0.0</version.maven-enforcer-plugin> <!-- Updated Maven Enforcer Plugin -->
    <version.maven-failsafe-plugin>3.0.0-M8</version.maven-failsafe-plugin> <!-- Updated Failsafe Plugin -->
    <version.maven-gpg-plugin>3.1.0</version.maven-gpg-plugin> <!-- Updated GPG Plugin -->
    <version.maven-invoker-plugin>3.2.2</version.maven-invoker-plugin> <!-- Updated Invoker Plugin -->
    <version.maven-jar-plugin>3.3.2</version.maven-jar-plugin> <!-- Updated Jar Plugin -->
    <version.maven-javadoc-plugin>3.4.1</version.maven-javadoc-plugin> <!-- Updated Javadoc Plugin -->
    <version.maven-plugin-plugin>3.6.0</version.maven-plugin-plugin> <!-- Updated Plugin Plugin -->
    <version.maven-release-plugin>3.0.1</version.maven-release-plugin> <!-- No change -->
    <version.maven-resources-plugin>3.3.2</version.maven-resources-plugin> <!-- Updated Resources Plugin -->
    <version.maven-source-plugin>3.3.2</version.maven-source-plugin> <!-- Updated Source Plugin -->
    <version.maven-surefire-plugin>3.0.0-M8</version.maven-surefire-plugin> <!-- Updated Surefire Plugin -->
    <version.mockito>4.11.0</version.mockito> <!-- Updated Mockito -->
    <version.nexus-staging-maven-plugin>1.6.14</version.nexus-staging-maven-plugin> <!-- Updated Nexus Staging Plugin -->
    <version.plexus-component-metadata>2.2.1</version.plexus-component-metadata> <!-- Updated Plexus Metadata -->
    <version.slf4j-api>2.0.7</version.slf4j-api> <!-- Updated SLF4J -->
    <version.sonar-maven-plugin>3.9.1.2184</version.sonar-maven-plugin> <!-- Updated Sonar Maven Plugin -->
    <version.sshd>2.9.0</version.sshd> <!-- Updated SSHD -->
    <project.build.outputTimestamp>2024-08-13T09:16:47Z</project.build.outputTimestamp>
    <asciidoctor.outputHtmlDirectory>${project.build.directory}/generated-docs</asciidoctor.outputHtmlDirectory>
  </properties>

  <dependencyManagement>
    <dependencies>
      <!-- Centralize Dependency Versions -->
      <dependency>
        <groupId>org.projectlombok</groupId>
        <artifactId>lombok</artifactId>
        <version>${version.lombok}</version>
        <scope>provided</scope>
      </dependency>
      <!-- Add other dependencies as needed -->
    </dependencies>
  </dependencyManagement>

  <modules>
    <module>jkube-kit</module>
    <module>kubernetes-maven-plugin</module>
    <module>openshift-maven-plugin</module>
    <module>gradle-plugin</module>
  </modules>

  <build>
    <pluginManagement>
      <plugins>
        <!-- Gradle API Maven Plugin -->
        <plugin>
          <groupId>com.marcnuri.plugins</groupId>
          <artifactId>gradle-api-maven-plugin</artifactId>
          <version>${version.gradle-api-maven-plugin}</version>
          <extensions>true</extensions>
        </plugin>

        <!-- License Maven Plugin -->
        <plugin>
          <groupId>com.mycila</groupId>
          <artifactId>license-maven-plugin</artifactId>
          <version>${version.license-maven-plugin}</version>
          <configuration>
            <useDefaultExcludes>true</useDefaultExcludes>
            <aggregate>true</aggregate>
            <properties>
              <owner>Red Hat, Inc.</owner>
            </properties>
            <mapping>
              <gradle>SLASHSTAR_STYLE</gradle>
            </mapping>
            <licenseSets>
              <licenseSet>
                <header>header.txt</header>
                <excludes>
                  <exclude>.editorconfig</exclude>
                  <exclude>**/org.ops4j.pax.logging.cfg</exclude>
                  <exclude>license.txt</exclude>
                  <exclude>**/plugin</exclude>
                  <exclude>**/test-kubeconfig</exclude>
                  <exclude>**/*-services</exclude>
                  <exclude>**/*-default</exclude>
                  <exclude>**/*.adoc</exclude>
                  <exclude>**/expected-pom.xml</exclude>
                  <exclude>**/DockerfileWithChangedFileName</exclude>
                  <exclude>**/enricher</exclude>
                  <exclude>**/test/resources/**/*</exclude>
                  <exclude>**/it/src/it/*/expected/**/*</exclude>
                  <exclude>**/*.bin</exclude>
                  <exclude>**/*.dat</exclude>
                  <exclude>**/*.importorder</exclude>
                  <exclude>**/*.timestamp</exclude>
                  <exclude>**/.gitkeep</exclude>
                  <exclude>Jenkinsfile</exclude>
                  <exclude>.mvn/**/*</exclude>
                  <exclude>mvnw</exclude>
                  <exclude>mvnw.cmd</exclude>
                  <exclude>**/.gradle/**/*</exclude>
                  <exclude>**/gradle/wrapper/**/*</exclude>
                  <exclude>**/gradlew.bat</exclude>
                  <exclude>quickstarts/gradle/*/build/**/*</exclude>
                </excludes>
              </licenseSet>
            </licenseSets>
          </configuration>
        </plugin>

        <!-- Maven Plugin Plugin -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-plugin-plugin</artifactId>
          <version>${version.maven-plugin-plugin}</version>
          <executions>
            <execution>
              <id>mojo-descriptor</id>
              <phase>process-classes</phase>
              <goals>
                <goal>descriptor</goal>
              </goals>
            </execution>
            <execution>
              <id>help-goal</id>
              <goals>
                <goal>helpmojo</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <!-- Maven Enforcer Plugin -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>${version.maven-enforcer-plugin}</version>
          <executions>
            <execution>
              <id>enforce-bans</id>
              <goals>
                <goal>enforce</goal>
              </goals>
              <configuration>
                <rules>
                  <dependencyConvergence />
                  <requireJavaVersion>
                    <version>[17,)</version> <!-- Enforce Java 17 or higher -->
                  </requireJavaVersion>
                </rules>
                <fail>true</fail>
              </configuration>
            </execution>
          </executions>
        </plugin>

        <!-- Maven Failsafe Plugin -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>${version.maven-failsafe-plugin}</version>
        </plugin>

        <!-- Maven GPG Plugin -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-gpg-plugin</artifactId>
          <version>${version.maven-gpg-plugin}</version>
        </plugin>

        <!-- Maven Jar Plugin -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>${version.maven-jar-plugin}</version>
        </plugin>

        <!-- Maven Javadoc Plugin -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>${version.maven-javadoc-plugin}</version>
        </plugin>

        <!-- Maven Release Plugin -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-release-plugin</artifactId>
          <version>${version.maven-release-plugin}</version>
        </plugin>

        <!-- Maven Resources Plugin -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>${version.maven-resources-plugin}</version>
        </plugin>

        <!-- Maven Source Plugin -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>${version.maven-source-plugin}</version>
        </plugin>

        <!-- Maven Surefire Plugin -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${version.maven-surefire-plugin}</version>
        </plugin>

        <!-- Lombok Maven Plugin -->
        <plugin>
          <groupId>org.projectlombok</groupId>
          <artifactId>lombok-maven-plugin</artifactId>
          <version>${version.lombok-maven-plugin}</version>
          <executions>
            <execution>
              <phase>compile</phase>
              <goals>
                <goal>delombok</goal>
              </goals>
              <configuration>
                <addOutputDirectory>false</addOutputDirectory>
                <sourceDirectory>src/main/java</sourceDirectory>
              </configuration>
            </execution>
          </executions>
          <dependencies>
            <dependency>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok</artifactId>
              <version>${version.lombok}</version>
            </dependency>
          </dependencies>
        </plugin>

        <!-- Asciidoctor Maven Plugin -->
        <plugin>
          <groupId>org.asciidoctor</groupId>
          <artifactId>asciidoctor-maven-plugin</artifactId>
          <version>${version.asciidoctor-maven-plugin}</version>
          <configuration>
            <sourceDirectory>src/main/asciidoc</sourceDirectory>
            <outputDirectory>${asciidoctor.outputHtmlDirectory}</outputDirectory>
            <refreshOn>.*</refreshOn>
            <attributes>
              <icons>font</icons>
              <pagenums/>
              <version>${project.version}</version>
              <idprefix/>
              <idseparator>-</idseparator>
              <allow-uri-read>true</allow-uri-read>
              <toc>left</toc>
              <linkcss>true</linkcss>
            </attributes>
            <backend>html5</backend>
          </configuration>
          <dependencies>
            <dependency>
              <groupId>org.asciidoctor</groupId>
              <artifactId>asciidoctorj</artifactId>
              <version>${version.asciidoctorj}</version>
            </dependency>
          </dependencies>
        </plugin>

        <!-- JaCoCo Maven Plugin -->
        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>${version.jacoco}</version>
          <executions>
            <execution>
              <id>default-prepare-agent</id>
              <goals>
                <goal>prepare-agent</goal>
              </goals>
            </execution>
            <execution>
              <id>default-report</id>
              <goals>
                <goal>report</goal>
              </goals>
            </execution>
            <!-- TODO: Remove once JMockit is no longer in the project -->
            <execution>
              <id>instrument</id>
              <phase>process-classes</phase>
              <goals>
                <goal>instrument</goal>
              </goals>
            </execution>
            <execution>
              <id>restore</id>
              <phase>test</phase>
              <goals>
                <goal>restore-instrumented-classes</goal>
              </goals>
            </execution>
            <!-- ///////////////////////////////////////////////////// -->
          </executions>
        </plugin>

        <!-- Sonar Maven Plugin -->
        <plugin>
          <groupId>org.sonarsource.scanner.maven</groupId>
          <artifactId>sonar-maven-plugin</artifactId>
          <version>${version.sonar-maven-plugin}</version>
        </plugin>

        <!-- Nexus Staging Maven Plugin -->
        <plugin>
          <groupId>org.sonatype.plugins</groupId>
          <artifactId>nexus-staging-maven-plugin</artifactId>
          <version>${version.nexus-staging-maven-plugin}</version>
          <extensions>true</extensions>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <!-- Enforce Dependency Convergence -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <executions>
          <execution>
            <id>dependency-convergence</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <dependencyConvergence />
              </rules>
              <fail>true</fail>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <!-- Javadoc Profile -->
    <profile>
      <id>javadoc</id>
      <build>
        <plugins>
          <!-- Lombok Delombok for Javadoc -->
          <plugin>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>delombok</id>
                <phase>generate-sources</phase>
                <goals>
                  <goal>delombok</goal>
                </goals>
                <configuration>
                  <addOutputDirectory>false</addOutputDirectory>
                  <sourceDirectory>src/main/java</sourceDirectory>
                </configuration>
              </execution>
            </executions>
          </plugin>

          <!-- Maven Javadoc Plugin -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
            <version>${version.maven-javadoc-plugin}</version>
            <configuration>
              <source>17</source> <!-- Updated to match Java version -->
              <sourcepath>
                ${project.basedir}/target/generated-sources/delombok:
                ${project.basedir}/target/generated-sources/annotations
              </sourcepath>
            </configuration>
            <executions>
              <execution>
                <goals>
                  <goal>jar</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- Release Profile -->
    <profile>
      <id>release</id>
      <build>
        <plugins>
          <!-- Maven GPG Plugin for Signing Artifacts -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <executions>
              <execution>
                <id>sign-artifacts</id>
                <phase>verify</phase>
                <goals>
                  <goal>sign</goal>
                </goals>
                <configuration>
                  <useAgent>true</useAgent>
                  <gpgArguments>
                    <arg>--batch</arg>
                    <arg>--pinentry-mode</arg>
                    <arg>loopback</arg>
                  </gpgArguments>
                </configuration>
              </execution>
            </executions>
          </plugin>

          <!-- Maven Enforcer Plugin to Prevent Snapshots in Release -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-enforcer-plugin</artifactId>
            <version>${version.maven-enforcer-plugin}</version>
            <executions>
              <execution>
                <id>enforce-no-snapshots</id>
                <goals>
                  <goal>enforce</goal>
                </goals>
                <configuration>
                  <rules>
                    <requireReleaseDeps>
                      <message>No Snapshots Allowed!</message>
                    </requireReleaseDeps>
                  </rules>
                  <fail>true</fail>
                </configuration>
              </execution>
            </executions>
          </plugin>

          <!-- Lombok Delombok for Javadoc in Release -->
          <plugin>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>prepare-javadoc-sources</id>
                <phase>generate-sources</phase>
                <goals>
                  <goal>delombok</goal>
                </goals>
                <configuration>
                  <addOutputDirectory>false</addOutputDirectory>
                  <sourceDirectory>src/main/java</sourceDirectory>
                </configuration>
              </execution>
            </executions>
          </plugin>

          <!-- Maven Javadoc Plugin for Release -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
            <version>${version.maven-javadoc-plugin}</version>
            <configuration>
              <source>17</source> <!-- Updated to match Java version -->
              <sourcepath>
                ${project.basedir}/target/generated-sources/delombok:
                ${project.basedir}/target/generated-sources/annotations
              </sourcepath>
            </configuration>
            <executions>
              <execution>
                <id>attach-javadocs</id>
                <goals>
                  <goal>jar</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

          <!-- Maven Source Plugin to Attach Sources -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-source-plugin</artifactId>
            <version>${version.maven-source-plugin}</version>
            <executions>
              <execution>
                <id>attach-sources</id>
                <goals>
                  <goal>jar</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- JaCoCo Profile for Test Coverage -->
    <profile>
      <id>jacoco</id>

      <dependencies>
        <!-- JaCoCo Runtime in Classpath for Offline Mode -->
        <dependency>
          <groupId>org.jacoco</groupId>
          <artifactId>org.jacoco.agent</artifactId>
          <version>${version.jacoco}</version>
          <classifier>runtime</classifier>
          <scope>test</scope>
        </dependency>
      </dependencies>

      <build>
        <plugins>
          <!-- JaCoCo Maven Plugin -->
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>${version.jacoco}</version>
          </plugin>

          <!-- Maven Surefire Plugin Configuration for JaCoCo -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>${version.maven-surefire-plugin}</version>
            <configuration>
              <systemPropertyVariables>
                <!-- JaCoCo Agent Destination File -->
                <jacoco-agent.destfile>target/jacoco.exec</jacoco-agent.destfile>
              </systemPropertyVariables>
              <environmentVariables>
                <LC_ALL>en_EN.UTF-8</LC_ALL>
              </environmentVariables>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- SonarQube Profile for Code Quality Analysis -->
    <profile>
      <id>sonar</id>
      <properties>
        <sonar.projectKey>jkubeio_jkube</sonar.projectKey>
        <sonar.moduleKey>${project.artifactId}</sonar.moduleKey>
        <sonar.organization>jkubeio</sonar.organization>
        <sonar.host.url>https://sonarcloud.io</sonar.host.url>
        <sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
        <sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
        <sonar.coverage.exclusions>**/quickstarts/**/*</sonar.coverage.exclusions>
      </properties>
      <build>
        <plugins>
          <!-- Sonar Maven Plugin Execution -->
          <plugin>
            <groupId>org.sonarsource.scanner.maven</groupId>
            <artifactId>sonar-maven-plugin</artifactId>
            <version>${version.sonar-maven-plugin}</version>
            <executions>
              <execution>
                <id>sonar</id>
                <phase>verify</phase> <!-- Changed to 'verify' for better integration -->
                <goals>
                  <goal>sonar</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>
